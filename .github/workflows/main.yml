name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Check if Dockerfile exists in the root
    - name: Check Dockerfile existence
      run: |
        echo "Checking if Dockerfile exists..."
        ls -la
        if [ -f Dockerfile ]; then 
          echo "Dockerfile found!";
        else 
          echo "Dockerfile not found!";
          exit 1; # Fail the workflow if Dockerfile is missing
        fi

    # Step 3: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 4: Log in to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 5: Build and Push Docker Image
    - name: Build and Push Docker Image
      id: build
      uses: docker/build-push-action@v4
      with:
        context: .  # Root directory of the repository
        file: ./Dockerfile  # Path to the Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/my-java-app:latest

    # Step 6: Tag Docker Image with Commit SHA
    - name: Tag Docker Image with Commit SHA
      run: |
        echo "Tagging Docker image with commit SHA..."
        IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/my-java-app
        COMMIT_SHA=${{ github.sha }}

        # Tag the image with the commit SHA
        docker tag $IMAGE_NAME:latest $IMAGE_NAME:$COMMIT_SHA
        docker push $IMAGE_NAME:$COMMIT_SHA
